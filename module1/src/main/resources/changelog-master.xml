<?xml version="1.0" encoding="UTF-8" ?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">


    <!--        <createTable tableName="product_info" catalogName="test">-->
    <!--            <column name="id" type="INT"/>-->
    <!--            <column name="name" type="VARCHAR"/>-->
    <!--            <column name="price" type="FLOAT(10,2)"/>-->
    <!--        </createTable>-->
    <changeSet id="1" author="NataPetra">
        <sql>
            create table if not exists product_info(
            id int not null primary key,
            name varchar(255),
            price float(10,2)
            )
        </sql>
    </changeSet>
    
<!--    <changeSet id="2" author="NataPetra">-->
<!--        <sql>-->
<!--            INSERT INTO product_info (id, name, price) VALUES (1, 'Coffee Black', 3.5);-->
<!--            INSERT INTO product_info (id, name, price) VALUES (2, 'Coffee Espresso', 2.9);-->
<!--            INSERT INTO product_info (id, name, price) VALUES (3, 'Coffee Latte', 4.0);-->
<!--            INSERT INTO product_info (id, name, price) VALUES (4, 'Coffee Latte Big', 4.5);-->
<!--            INSERT INTO product_info (id, name, price) VALUES (5, 'Black Tea', 2.5);-->
<!--            INSERT INTO product_info (id, name, price) VALUES (6, 'Green Tea', 2.5);-->
<!--            INSERT INTO product_info (id, name, price) VALUES (7, 'Water Still', 1.5);-->
<!--            INSERT INTO product_info (id, name, price) VALUES (8, 'Water Sparkling', 1.5);-->
<!--            INSERT INTO product_info (id, name, price) VALUES (9, 'Coca Cola', 2.0);-->
<!--            INSERT INTO product_info (id, name, price) VALUES (10, 'Pepsi Cola', 2.0);-->
<!--        </sql>-->
<!--    </changeSet>-->

    <changeSet id="2" author="NataPetra">
        <sql>
            CREATE TABLE if not exists t_employee (
            F_ID BIGINT(19) NOT NULL,
            BIRTH_DATE DATE NULL,
            CELL_PHONE VARCHAR(45) NULL,
            FIRSTNAME VARCHAR(255) NULL,
            LASTNAME VARCHAR(255) NULL,
            PRIMARY KEY (F_ID));
        </sql>
    </changeSet>

    <changeSet id="3" author="NataPetra">
        <sql>
            CREATE TABLE if not exists t_employeedetail (
            F_EMPLOYEEID BIGINT(19) NOT NULL,
            CITY VARCHAR(45) NULL,
            COUNTRY VARCHAR(45) NULL,
            STATE VARCHAR(45) NULL,
            STREET VARCHAR(255) NULL,
            PRIMARY KEY (F_EMPLOYEEID),
            CONSTRAINT F_EMPLOYEEID
            FOREIGN KEY (F_EMPLOYEEID)
            REFERENCES t_employee (F_ID)
            ON DELETE CASCADE
            ON UPDATE CASCADE);
        </sql>
    </changeSet>

    <changeSet id="4" author="NataPetra">
        <sql>
            CREATE TABLE t_employee_seq (
            next_val INT UNSIGNED PRIMARY KEY NOT NULL
            );
            INSERT INTO t_employee_seq VALUES (0);
        </sql>
    </changeSet>

    <changeSet id="5" author="NataPetra">
        <sql>
            CREATE TABLE IF NOT EXISTS t_department (
            F_DEPARTMENTID BIGINT(19) UNSIGNED PRIMARY KEY NOT NULL,
            F_DEPARTMENTNAME VARCHAR(255) NOT NULL
            );
            ALTER TABLE t_employee ADD F_DEPARTMENTID BIGINT(19) UNSIGNED NOT NULL;
            ALTER TABLE t_employee ADD CONSTRAINT FK_F_DEPARTMENTID
            FOREIGN KEY (F_DEPARTMENTID) REFERENCES t_department(F_DEPARTMENTID);
        </sql>
    </changeSet>

    <changeSet id="6" author="a.veramkovich@gmail.com">
        <sql>
            CREATE TABLE IF NOT EXISTS `t_meeting` (
            `F_MEETING_ID` BIGINT(19) UNSIGNED PRIMARY KEY NOT NULL,
            `F_MEETINGDATE` DATETIME,
            `F_SUBJECT` VARCHAR(255) NOT NULL
            );
            CREATE TABLE IF NOT EXISTS t_meeting_seq (
            next_val INT UNSIGNED PRIMARY KEY NOT NULL
            );
            CREATE TABLE IF NOT EXISTS t_employee_meeting (
            `F_EMPLOYEEID` BIGINT(19) NOT NULL,
            `F_MEETING_ID` BIGINT(19) UNSIGNED NOT NULL,
            CONSTRAINT `F_EMPLOYEE_ID` FOREIGN KEY (`F_EMPLOYEEID`) REFERENCES `t_employee` (`F_ID`),
            CONSTRAINT `F_MEETINGID` FOREIGN KEY (`F_MEETING_ID`) REFERENCES `t_meeting` (`F_MEETING_ID`)
            );
            INSERT INTO t_meeting_seq VALUES (0);
        </sql>
    </changeSet>

    <changeSet id="7" author="NataPetra">
        <sql>
            CREATE TABLE t_employee_photo (
            ID VARCHAR(200) NOT NULL,
            EMPLOYEE_ID BIGINT NULL,
            EMPLOYEE_PHOTO BLOB NOT NULL,
            CONSTRAINT pk_t_employee_photo PRIMARY KEY (ID)
            );

            ALTER TABLE t_employee_photo

            ADD CONSTRAINT FK_T_EMPLOYEE_PHOTO_ON_EMPLOYEE
            FOREIGN KEY (EMPLOYEE_ID)
            REFERENCES t_employee (F_ID);

<!--            CREATE TABLE IF NOT EXISTS t_employee_photo (-->
<!--            ID BIGINT(19) PRIMARY KEY NOT NULL,-->
<!--            EMPLOYEE_ID BIGINT(19) NOT NULL,-->
<!--            PHOTO BLOB NOT NULL,-->
<!--            CONSTRAINT F_EMPLOYEEID_PHOTO-->
<!--            FOREIGN KEY (EMPLOYEE_ID)-->
<!--            REFERENCES t_employee (F_ID)-->
<!--            ON DELETE CASCADE-->
<!--            ON UPDATE CASCADE);-->

        </sql>
    </changeSet>

<!--    <changeSet id="8" author="NataPetra">-->
<!--        <sql>-->
<!--            CREATE TABLE t_employee_photo_seq (-->
<!--            next_val INT UNSIGNED PRIMARY KEY NOT NULL-->
<!--            );-->
<!--            INSERT INTO t_employee_photo_seq VALUES (0);-->
<!--        </sql>-->
<!--    </changeSet>-->

    <changeSet id="8" author="NataPetra">
        <sql>
            CREATE TABLE IF NOT EXISTS app_user (
            ID VARCHAR(255) NOT NULL,
            USER_NAME VARCHAR(255) NOT NULL,
            USER_PASSWORD VARCHAR(255),
            USER_ROLE VARCHAR(255),
            CONSTRAINT pk_app_user PRIMARY KEY (ID)
            );

            INSERT INTO app_user VALUES (
                '0a9caff8-6858-49a3-abee-7924e204dd38',
                'root',
                'root',
                'ADMIN'
            );
        </sql>
    </changeSet>


</databaseChangeLog>

